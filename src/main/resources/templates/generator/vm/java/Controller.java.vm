package ${package}.controller;

import java.util.List;
import java.util.Map;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import top.yimo.common.annotation.Log;
import top.yimo.common.controller.BaseController;
import top.yimo.common.enums.OperatorType;
import top.yimo.common.model.vo.PageVo;
import top.yimo.common.model.vo.ResponseVo;
import ${package}.domain.${className}DO;
import ${package}.service.${className}Service;

/**
 * ${comments} 
 * 
 * @author ${author}
 * @email ${email}
 * @version 1.0
 * @date ${datetime}
 */
 
@Controller
@RequestMapping("/${moduleName}/${classname}")
public class ${className}Controller extends BaseController{
	private String prefix ="/${moduleName}/${classname}";
	private final static String title ="${comments}";
	@Autowired
	private ${className}Service ${classname}Service;
	
	@GetMapping()
	@RequiresPermissions("${moduleName}:${classname}:${classname}")
	public String ${className}(){
	    return prefix+"/${classname}";
	}
	
	@ResponseBody
	@GetMapping("/list")
	@RequiresPermissions("${moduleName}:${classname}:${classname}")
	@Log(describe = "获取"+title, title = title, operatorType = OperatorType.QUERY)
	public PageVo listByPage(@RequestParam Map<String, Object> params){
		List<${className}DO> ${classname}List = ${classname}Service.listByPage(params);
		int total = ${classname}Service.count(params);
		return getPageData(${classname}List, total);
	}
	
	@GetMapping("/add")
	@RequiresPermissions("${moduleName}:${classname}:add")
	public String add(){
	    return prefix+"/add";
	}

	@GetMapping("/edit/{${pk.attrname}}")
	@RequiresPermissions("${moduleName}:${classname}:edit")
	public String edit(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname},Model model){
		${className}DO ${classname} = ${classname}Service.get(${pk.attrname});
		model.addAttribute("${classname}", ${classname});
	    return prefix+"/edit";
	}
	
	@ResponseBody
	@PostMapping("/save")
	@RequiresPermissions("${moduleName}:${classname}:add")
	@Log(describe = "新增", title = title, operatorType = OperatorType.DELETE)
	public ResponseVo save( ${className}DO ${classname}){
		beforeSave(${classname});
		if(${classname}Service.save(${classname})>0){
			return ResponseVo.ok("保存成功");
		}
		return ResponseVo.fail();
	}
	
	@ResponseBody
	@PutMapping("/update")
	@RequiresPermissions("${moduleName}:${classname}:edit")
	@Log(describe = "更新", title = title, operatorType = OperatorType.DELETE)
	public ResponseVo update( ${className}DO ${classname}){
			beforeUpdate(${classname});
		if (${classname}Service.update(${classname}) > 0) {
			return ResponseVo.ok("更新成功");
		}
		return ResponseVo.fail();
	}
	
	/**
	 * 删除
	 */
	@DeleteMapping( "/remove")
	@ResponseBody
	@RequiresPermissions("${moduleName}:${classname}:remove")
	@Log(describe = "删除", title = title, operatorType = OperatorType.DELETE)
	public ResponseVo remove( ${pk.attrType} ${pk.attrname}){
		if(${classname}Service.remove(${pk.attrname})>0){
			return ResponseVo.ok("删除成功");
		}
		return ResponseVo.fail();
	}
	
	/**
	 * 批量删除
	 */
	@DeleteMapping( "/batchRemove")
	@ResponseBody
	@RequiresPermissions("${moduleName}:${classname}:batchRemove")
	@Log(describe = "批量删除", title = title, operatorType = OperatorType.DELETE)
	public ResponseVo remove(@RequestParam("ids[]") ${pk.attrType}[] ${pk.attrname}s){
		if(${classname}Service.batchRemove(${pk.attrname}s)>0){
			return ResponseVo.ok("删除成功");
		}
		return ResponseVo.fail();
	}
}
